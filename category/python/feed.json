{
    "version": "https://jsonfeed.org/version/1",
    "title": "阿福の可爱猫窝 • All posts by \"python\" category",
    "description": "一只想要变可爱的男孩纸~",
    "home_page_url": "https://astolfocat.github.io",
    "items": [
        {
            "id": "https://astolfocat.github.io/MyCategories/note/Python/python%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/",
            "url": "https://astolfocat.github.io/MyCategories/note/Python/python%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/",
            "title": "Python期末复习",
            "date_published": "2021-11-01T16:00:00.000Z",
            "content_html": "<h1 id=\"python-期末复习\"><a class=\"markdownIt-Anchor\" href=\"#python-期末复习\">#</a> Python 期末复习</h1>\n<h2 id=\"变量\"><a class=\"markdownIt-Anchor\" href=\"#变量\">#</a> 变量</h2>\n<h3 id=\"案例一\"><a class=\"markdownIt-Anchor\" href=\"#案例一\">#</a> 案例一</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">a = <span class=\"string\">&#x27;hello&#x27;</span></span><br><span class=\"line\">b = a</span><br><span class=\"line\">a = <span class=\"string\">&#x27;world&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(b)</span><br></pre></td></tr></table></figure>\n<details class=\"primary\"><summary>结果为</summary><div>\n<p>hello<br>\n 原因：一切数据皆对象，变量指向数据对象</p>\n</div></details>\n<h3 id=\"案例二\"><a class=\"markdownIt-Anchor\" href=\"#案例二\">#</a> 案例二</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">x1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">x2 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">x1 <span class=\"keyword\">is</span> x2</span><br><span class=\"line\">x3 = x2</span><br><span class=\"line\">x2 <span class=\"keyword\">is</span> x3</span><br><span class=\"line\">x2.append(<span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x3)</span><br></pre></td></tr></table></figure>\n<details class=\"primary\"><summary>结果为</summary><div>\n<p>False<br>\nTrue<br>\n[1, 2, 3]<br>\n[1, 2, 3]<br>\n 原因：x1 和 x2 是两个地址，让 x2 = [1, 2] 实际上是让 x2 指向了一个新的对象（虽然这个对象和 x1 的值一样），但是如果写成 x3 = x2 的话，意思就是 x3 指向 x2 的对象，这个时候修改 x2 那么 x3 也会一起变化。</p>\n</div></details>\n<h3 id=\"案例三\"><a class=\"markdownIt-Anchor\" href=\"#案例三\">#</a> 案例三</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">x1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">x2 = x1</span><br><span class=\"line\">x1 = <span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(x1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x2)</span><br></pre></td></tr></table></figure>\n<details class=\"primary\"><summary>结果为</summary><div>\n<p>6<br>\n[1, 2]<br>\n 原因：给 x1 重新赋值的时候，相当于 x1 指向了新的对象 6，但是 x2 还是指向 [1, 2]</p>\n</div></details>\n<h2 id=\"序列\"><a class=\"markdownIt-Anchor\" href=\"#序列\">#</a> 序列</h2>\n<h3 id=\"列表-list\"><a class=\"markdownIt-Anchor\" href=\"#列表-list\">#</a> 列表 List</h3>\n<p>列表是由一系列按照特定顺序排列的元素组成的可变序列</p>\n<h4 id=\"案例一-2\"><a class=\"markdownIt-Anchor\" href=\"#案例一-2\">#</a> 案例一</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">    a.remove(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n<details class=\"primary\"><summary>结果为</summary><div>\n<p>[2, 4]<br>\n 原因：x 依次取 a 中的第 1，2…… 个元素（是以 remove 后的新列表为标准的）</p>\n</div></details>\n<h4 id=\"案例二-2\"><a class=\"markdownIt-Anchor\" href=\"#案例二-2\">#</a> 案例二</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">    a.pop()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n<details class=\"primary\"><summary>结果为</summary><div>\n<p>[1, 2]<br>\n 原因：pop () 括号中没有参数的时候，删除列表最后一个元素，第三次循环的时候列表没有第三个元素了所以结束循环。</p>\n</div></details>\n<h4 id=\"案例三-2\"><a class=\"markdownIt-Anchor\" href=\"#案例三-2\">#</a> 案例三</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    <span class=\"keyword\">del</span> a[<span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n<details class=\"primary\"><summary>结果为</summary><div>\n<p>[]<br>\n 原因：x 依次取 1, 2, 3, 4, 循环四次故元素被删除干净。</p>\n</div></details>\n<h3 id=\"元组-tuple\"><a class=\"markdownIt-Anchor\" href=\"#元组-tuple\">#</a> 元组 tuple</h3>\n<p>元组是由一系列按特定顺序排列的元素组成的不可变序列</p>\n<blockquote>\n<ul>\n<li>不可变对象：对象存放在地址中的值不会改变，所谓的改变是创建了一个新地址放新对象。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">a = <span class=\"number\">1</span></span><br><span class=\"line\">b = <span class=\"number\">1</span></span><br><span class=\"line\">a <span class=\"keyword\">is</span> b</span><br></pre></td></tr></table></figure>\n<details class=\"primary\"><summary>结果为</summary><div>\n<p>True</p>\n</div></details>\n<ul>\n<li>可变对象：对象存放在地址中的值会原地改变，对于相同的值的不同对象，内存中会存在不同的对象（比如列表和下面的例子）</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">b = [<span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">a <span class=\"keyword\">is</span> b</span><br></pre></td></tr></table></figure>\n<details class=\"primary\"><summary>结果为</summary><div>\n<p>False</p>\n</div></details>\n<h4 id=\"案例一-3\"><a class=\"markdownIt-Anchor\" href=\"#案例一-3\">#</a> 案例一</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">a = [<span class=\"string\">&#x27;jn&#x27;</span>, <span class=\"string\">&#x27;wh&#x27;</span>]</span><br><span class=\"line\">b = [<span class=\"string\">&#x27;jn&#x27;</span>, <span class=\"string\">&#x27;wh&#x27;</span>]</span><br><span class=\"line\">c = a</span><br><span class=\"line\">a += [<span class=\"string\">&#x27;qd&#x27;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a, b, c)</span><br></pre></td></tr></table></figure>\n<details class=\"primary\"><summary>结果为</summary><div>\n<p>[‘jn’, ‘wh’, ‘qd’][‘jn’, ‘wh’][‘jn’, ‘wh’, ‘qd’]</p>\n</div></details>\n</blockquote>\n<p>注意，创建一个元素的元组要加逗号</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">A = (<span class=\"string\">&#x27;山东大学&#x27;</span>,)</span><br></pre></td></tr></table></figure>\n<h3 id=\"字典-dictionary\"><a class=\"markdownIt-Anchor\" href=\"#字典-dictionary\">#</a> 字典 dictionary</h3>\n<p>字典是无序的可变序列，保存的内容是以键值对的形式存放的，可以一个键对多个值<br>\n字典又称<span class=\"label primary\">关联数组</span>或者<span class=\"label primary\">散列表</span></p>\n<ul>\n<li><s>字典的内容好多啊，不想打了，去看 ppt 吧</s></li>\n</ul>\n<h3 id=\"集合-set\"><a class=\"markdownIt-Anchor\" href=\"#集合-set\">#</a> 集合 set</h3>\n<p>集合是无序不重复的元素组合</p>\n<ul>\n<li>可变集合 set</li>\n<li>不可变集合 frozenset</li>\n</ul>\n<h3 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h3>\n<table>\n<thead>\n<tr>\n<th>数据结构</th>\n<th>是否可变</th>\n<th>是否重复</th>\n<th>是否有序</th>\n<th>定义符号</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>列表 list</td>\n<td>可变</td>\n<td>可重复</td>\n<td>无序</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>元组 tuple</td>\n<td>不可变</td>\n<td>可重复</td>\n<td>无序</td>\n<td>()</td>\n</tr>\n<tr key:value=\"\">\n<td>字典 dictionary</td>\n<td>可变</td>\n<td>可重复</td>\n<td>无序</td>\n<td></td>\n</tr>\n<tr>\n<td>集合 set</td>\n<td>不可变</td>\n<td>不可重复</td>\n<td>无序</td>\n<td>{}</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "笔记~",
                "Python~"
            ]
        },
        {
            "id": "https://astolfocat.github.io/MyCategories/note/Python/rename/",
            "url": "https://astolfocat.github.io/MyCategories/note/Python/rename/",
            "title": "文件批量重命名",
            "date_published": "2021-11-01T16:00:00.000Z",
            "content_html": "<h2 id=\"批量重命名\"><a class=\"markdownIt-Anchor\" href=\"#批量重命名\">#</a> 批量重命名</h2>\n<p>下面是在整理阿福的图片的时候，因为强迫症想要给图片同一名字，但是手动重命名过于麻烦，现在既然学了 Python 那么也是该让它发挥价值了（yeah~）</p>\n<ul>\n<li>因为比较简单所以就不做批注了叭</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># coding = gbk</span></span><br><span class=\"line\"><span class=\"keyword\">import</span>  os</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\">path = <span class=\"string\">&#x27;F:\\\\Pictures\\\\photogallery\\\\Astolfo\\\\&#x27;</span></span><br><span class=\"line\">file_names = os.listdir(path)</span><br><span class=\"line\">n = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> file_names:</span><br><span class=\"line\">    oldname = path+file_names[n]</span><br><span class=\"line\">    newname = path+<span class=\"string\">&#x27;Astolfo_&#x27;</span>+<span class=\"built_in\">str</span>(n+<span class=\"number\">1</span>).zfill(<span class=\"number\">3</span>)+<span class=\"string\">&#x27;.jpg&#x27;</span></span><br><span class=\"line\">    os.rename(oldname, newname)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(oldname,<span class=\"string\">&#x27;---&gt;&#x27;</span>,newname)</span><br><span class=\"line\">    n+=<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>",
            "tags": [
                "笔记~",
                "Python~"
            ]
        }
    ]
}
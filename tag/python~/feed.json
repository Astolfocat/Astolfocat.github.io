{
    "version": "https://jsonfeed.org/version/1",
    "title": "阿福の可爱猫窝 • All posts by \"python~\" tag",
    "description": "一只想要变可爱的男孩纸~",
    "home_page_url": "https://astolfocat.github.io",
    "items": [
        {
            "id": "https://astolfocat.github.io/MyCategories/note/Python/python%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/",
            "url": "https://astolfocat.github.io/MyCategories/note/Python/python%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/",
            "title": "Python期末复习",
            "date_published": "2021-11-01T16:00:00.000Z",
            "content_html": "<h1>Python 期末复习</h1>\n<h2 id=\"变量\">变量</h2>\n<h3 id=\"案例一\">案例一</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">a = <span class=\"string\">&#x27;hello&#x27;</span></span><br><span class=\"line\">b = a</span><br><span class=\"line\">a = <span class=\"string\">&#x27;world&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(b)</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\nhello<br>\n原因：一切数据皆对象，变量指向数据对象<br>\n+++</p>\n<h3 id=\"案例二\">案例二</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">x1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">x2 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">x1 <span class=\"keyword\">is</span> x2</span><br><span class=\"line\">x3 = x2</span><br><span class=\"line\">x2 <span class=\"keyword\">is</span> x3</span><br><span class=\"line\">x2.append(<span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x3)</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\nFalse<br>\nTrue<br>\n[1, 2, 3]<br>\n[1, 2, 3]<br>\n原因：x1 和 x2 是两个地址，让 x2 = [1, 2] 实际上是让 x2 指向了一个新的对象（虽然这个对象和x1的值一样），但是如果写成 x3 = x2 的话，意思就是 x3 指向 x2 的对象，这个时候修改 x2 那么 x3 也会一起变化。<br>\n+++</p>\n<h3 id=\"案例三\">案例三</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">x1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">x2 = x1</span><br><span class=\"line\">x1 = <span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(x1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x2)</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\n6<br>\n[1, 2]<br>\n原因：给 x1 重新赋值的时候，相当于 x1 指向了新的对象 6，但是 x2 还是指向 [1, 2]<br>\n+++</p>\n<h2 id=\"序列\">序列</h2>\n<h3 id=\"列表-List\">列表 List</h3>\n<p>列表是由一系列按照特定顺序排列的元素组成的可变序列</p>\n<h4 id=\"案例一-2\">案例一</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">    a.remove(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\n[2, 4]<br>\n原因：x 依次取 a 中的第1，2……个元素（是以remove后的新列表为标准的）<br>\n+++</p>\n<h4 id=\"案例二-2\">案例二</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">    a.pop()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\n[1, 2]<br>\n原因：pop()括号中没有参数的时候，删除列表最后一个元素，第三次循环的时候列表没有第三个元素了所以结束循环。<br>\n+++</p>\n<h4 id=\"案例三-2\">案例三</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    <span class=\"keyword\">del</span> a[<span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\n[]<br>\n原因：x 依次取 1, 2, 3, 4,循环四次故元素被删除干净。<br>\n+++</p>\n<h3 id=\"元组-tuple\">元组 tuple</h3>\n<p>元组是由一系列按特定顺序排列的元素组成的不可变序列</p>\n<blockquote>\n<ul>\n<li>不可变对象：对象存放在地址中的值不会改变，所谓的改变是创建了一个新地址放新对象。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">a = <span class=\"number\">1</span></span><br><span class=\"line\">b = <span class=\"number\">1</span></span><br><span class=\"line\">a <span class=\"keyword\">is</span> b</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\nTrue<br>\n+++</p>\n<ul>\n<li>可变对象：对象存放在地址中的值会原地改变，对于相同的值的不同对象，内存中会存在不同的对象（比如列表和下面的例子）</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">b = [<span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">a <span class=\"keyword\">is</span> b</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\nFalse<br>\n+++</p>\n<h4 id=\"案例一-3\">案例一</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">a = [<span class=\"string\">&#x27;jn&#x27;</span>, <span class=\"string\">&#x27;wh&#x27;</span>]</span><br><span class=\"line\">b = [<span class=\"string\">&#x27;jn&#x27;</span>, <span class=\"string\">&#x27;wh&#x27;</span>]</span><br><span class=\"line\">c = a</span><br><span class=\"line\">a += [<span class=\"string\">&#x27;qd&#x27;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a, b, c)</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\n[‘jn’, ‘wh’, ‘qd’][‘jn’, ‘wh’][‘jn’, ‘wh’, ‘qd’]<br>\n+++</p>\n</blockquote>\n<p>注意，创建一个元素的元组要加逗号</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">A = (<span class=\"string\">&#x27;山东大学&#x27;</span>,)</span><br></pre></td></tr></table></figure>\n<h3 id=\"字典-dictionary\">字典 dictionary</h3>\n<p>字典是无序的可变序列，保存的内容是以键值对的形式存放的，可以一个键对多个值<br>\n字典又称[关联数组]{.label .primary}或者[散列表]{.label .primary}</p>\n<ul>\n<li><s>字典的内容好多啊，不想打了，去看ppt吧</s></li>\n</ul>\n<h3 id=\"集合-set\">集合 set</h3>\n<p>集合是无序不重复的元素组合</p>\n<ul>\n<li>可变集合 set</li>\n<li>不可变集合 frozenset</li>\n</ul>\n<h3 id=\"总结\">总结</h3>\n<table>\n<thead>\n<tr>\n<th>数据结构</th>\n<th>是否可变</th>\n<th>是否重复</th>\n<th>是否有序</th>\n<th>定义符号</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>列表list</td>\n<td>可变</td>\n<td>可重复</td>\n<td>有序</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>元组tuple</td>\n<td>不可变</td>\n<td>可重复</td>\n<td>有序</td>\n<td>()</td>\n</tr>\n<tr>\n<td>字典dictionary</td>\n<td>可变</td>\n<td>可重复</td>\n<td>无序</td>\n<td>{ key : value }</td>\n</tr>\n<tr>\n<td>集合set</td>\n<td>不可变</td>\n<td>不可重复</td>\n<td>无序</td>\n<td>{}</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"函数\">函数</h2>\n<h3 id=\"参数传递\">参数传递</h3>\n<ul>\n<li>当实际参数为不可变对象时，进行值传递；当实际参数为可变对象时，进行引用传递；</li>\n<li>值传递后，改变形参的值，实参的值不变；引用传递后，改变形参的值，实参也发生变化；</li>\n</ul>\n<h4 id=\"案例一-4\">案例一</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span>(<span class=\"params\">a</span>):</span></span><br><span class=\"line\">    a = <span class=\"number\">10</span></span><br><span class=\"line\">b = <span class=\"number\">2</span></span><br><span class=\"line\">test(b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(b)</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\n2<br>\n原因：不可变对象，形参a改变，实参b不改变<br>\n+++</p>\n<h4 id=\"案例二-3\">案例二</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span>(<span class=\"params\">a</span>):</span></span><br><span class=\"line\">    a += a</span><br><span class=\"line\">mot = <span class=\"string\">&#x27;asd&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mot)</span><br><span class=\"line\">test(mot)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(mot)</span><br><span class=\"line\"><span class=\"built_in\">list</span> = [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">list</span>)</span><br><span class=\"line\">test(<span class=\"built_in\">list</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">list</span>)</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\nasd<br>\nasd<br>\n[‘a’, ‘b’]<br>\n[‘a’, ‘b’, ‘a’, ‘b’]<br>\n原因：不可变对象字符串是值传递，原值不改变；可变对象列表是引用传递，原值一起改变。<br>\n+++</p>\n<h4 id=\"案例三-3\">案例三</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span>(<span class=\"params\">l=[]</span>):</span></span><br><span class=\"line\">    l.append(<span class=\"string\">&#x27;sdu&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> l</span><br><span class=\"line\"><span class=\"built_in\">print</span>(test())</span><br><span class=\"line\"><span class=\"built_in\">print</span>(test())</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\n[‘sdu’]<br>\n[‘sdu’, ‘sdu’]<br>\n原因：默认参数l已经发生改变<br>\n+++</p>\n<h4 id=\"案例四\">案例四</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span>(<span class=\"params\">l=<span class=\"literal\">None</span></span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> l <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        l = []</span><br><span class=\"line\">    l.append(<span class=\"string\">&#x27;sdu&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> l</span><br><span class=\"line\"><span class=\"built_in\">print</span>(test())</span><br><span class=\"line\"><span class=\"built_in\">print</span>(test())</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\n[‘sdu’]<br>\n[‘sdu’]<br>\n+++</p>\n<h3 id=\"变量的作用域\">变量的作用域</h3>\n<ul>\n<li>当局部变量与全局变量重名时，对函数体的变量赋值，不影响函数体外的变量</li>\n<li>函数内部的变量名如果第一次出现且出现在 = 前面，则其为局部变量；如果第一次出现且出现在 = 后面，且该变量在全局中已定义，则为引用全局变量。</li>\n</ul>\n<h4 id=\"案例一-5\">案例一</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">a = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span>():</span></span><br><span class=\"line\">    a = a + <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(a)</span><br><span class=\"line\">test()</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\nError<br>\n原因：没有定义test()里面的第一个a（等号左边的a）<br>\n+++</p>\n<h4 id=\"案例二-4\">案例二</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">a = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span>():</span></span><br><span class=\"line\">    s = a + <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(s)</span><br><span class=\"line\">test()</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\n11<br>\n原因：正常函数输出<br>\n+++</p>\n<h4 id=\"案例三-4\">案例三</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">b = [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test01</span>():</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test02</span>():</span></span><br><span class=\"line\">    a = b</span><br><span class=\"line\">test02()</span><br><span class=\"line\">test01()</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\n[1, 2, 3]<br>\n原因：test02()把全局变量 b 赋值给test02里的局部变量 a，但是test01()调用的还是全局变量 a。<br>\n+++</p>\n<h2 id=\"字符串\">字符串</h2>\n<h3 id=\"字符串的常用功能\">字符串的常用功能</h3>\n<p>:::info</p>\n<h4 id=\"拼接\">拼接</h4>\n<p>:::</p>\n<blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">a = <span class=\"string\">&#x27;hello&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;world&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a + b)</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\nhelloworld<br>\n+++</p>\n</blockquote>\n<p>:::info</p>\n<h4 id=\"计算字符串长度\">计算字符串长度</h4>\n<p>:::</p>\n<blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">a = <span class=\"string\">&#x27;20级人工智能自动化&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(a))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(a.encode()))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(a.encode(<span class=\"string\">&#x27;gbk&#x27;</span>)))</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\n10<br>\n26<br>\n18<br>\n原因：len()函数不区分中英文和数字，所有字符均按一个字节计算；encode()方法计算实际占用字节数，默认UTF-8(汉字占三字节)，若选择gbk(汉字2字节)。<br>\n+++</p>\n</blockquote>\n<p>:::info</p>\n<h4 id=\"字符串切片\">字符串切片</h4>\n<p>:::</p>\n<blockquote>\n<p>string[start : end : step]<br>\n注意end不包括在内哦~</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">a = <span class=\"string\">&#x27;20级人工智能自动化&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a[<span class=\"number\">1</span>:<span class=\"number\">7</span>:<span class=\"number\">2</span>])</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\n0人智<br>\n+++</p>\n</blockquote>\n<p>:::info</p>\n<h4 id=\"分割合并字符串\">分割合并字符串</h4>\n<p>:::</p>\n<blockquote>\n<p>listname = str,split(sep, maxsplit)<br>\nsep 参数默认为None，级所有空字符<br>\nmaxsplit 表示分割次数<br>\n分割字符串是把字符串分割成列表<br>\n合并是把列表合并成字符串<br>\n对字符串的操作方法都不会改变原来字符串的值</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">a = <span class=\"string\">&#x27;山东大学，简称 山大 &gt;&gt;&gt; www.sdu.edu.cn&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a.split(<span class=\"string\">&#x27; &#x27;</span>, <span class=\"number\">2</span>))</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\n[‘山东大学，简称’,‘山大’,‘&gt;&gt;&gt; <a href=\"http://www.sdu.edu.cn\">www.sdu.edu.cn</a>’]<br>\n+++<br>\nstrnew = string.join(iterable)<br>\niterable 为可迭代对象<br>\nstring 为合并时的分隔符</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">a = [<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>]</span><br><span class=\"line\">str_friend = <span class=\"string\">&#x27; @&#x27;</span>.join(a)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(str_friend)</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\n[‘山东大学，简称’,‘山大’,‘&gt;&gt;&gt; <a href=\"http://www.sdu.edu.cn\">www.sdu.edu.cn</a>’]<br>\n+++</p>\n</blockquote>\n<p>:::info</p>\n<h4 id=\"字符串的检索-count-方法\">字符串的检索 count()方法</h4>\n<p>:::</p>\n<blockquote>\n<p>str.count(sub, (start), (end))<br>\n用于检索指定字符串在另一个字符串中出现的次数，若不存在返回0</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">a = <span class=\"string\">&#x27;how do you do&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a.count(<span class=\"string\">&#x27;o&#x27;</span>,<span class=\"number\">1</span>,<span class=\"number\">5</span>))</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\n1<br>\n+++</p>\n</blockquote>\n<p>:::info</p>\n<h4 id=\"字符串的检索-find-方法\">字符串的检索 find()方法</h4>\n<p>:::</p>\n<blockquote>\n<p>str.find(sub, (start), (end))<br>\n用于检索是否包含指定的字符串，若不存在返回-1，否则返回首次出现该字符串的索引</p>\n</blockquote>\n<p>:::info</p>\n<h4 id=\"字符串的检索-index-方法\">字符串的检索 index()方法</h4>\n<p>:::</p>\n<blockquote>\n<p>str.index(sub, (start), (end))<br>\n同 find() 方法，但是若不存在则会抛出异常（<s>那不就没用吗</s>）</p>\n</blockquote>\n<p>:::info</p>\n<h4 id=\"字符串的检索-startswith-方法-和-endswith-方法\">字符串的检索 startswith()方法 和 endswith()方法</h4>\n<p>:::</p>\n<blockquote>\n<p>用于检索字符串是否以指定字符串开头或者结尾，返回 True 或者 False。</p>\n</blockquote>\n<p>:::info</p>\n<h4 id=\"字母大小写转换\">字母大小写转换</h4>\n<p>:::</p>\n<blockquote>\n<p>strnew = string.lower()<br>\nstrnew = string.upper()</p>\n</blockquote>\n<p>:::info</p>\n<h4 id=\"去除字符串左右两侧的空格和特殊字符\">去除字符串左右两侧的空格和特殊字符</h4>\n<p>:::</p>\n<blockquote>\n<p>str.strip([chars])<br>\n不加任何东西默认为空格、制表符、回车符、换行符。<br>\n左侧右侧可以分别用lstrip和rstrip</p>\n</blockquote>\n<p>:::info</p>\n<h4 id=\"格式化字符串\">格式化字符串</h4>\n<p>:::</p>\n<blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">template = <span class=\"string\">&#x27;编号：%09d 公司名称：%s&#x27;</span></span><br><span class=\"line\">context1 = (<span class=\"number\">7</span>,<span class=\"string\">&#x27;百度&#x27;</span>)</span><br><span class=\"line\">context2 = (<span class=\"number\">8</span>,<span class=\"string\">&#x27;淘宝&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(template%context1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(template%context2)</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\n编号：000000007 公司名称：百度<br>\n编号：000000008 公司名称：淘宝<br>\n+++</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&#123;server&#125;&#123;1&#125;:&#123;0&#125;&quot;</span>.<span class=\"built_in\">format</span>(<span class=\"number\">8888</span>,<span class=\"string\">&#x27;192.168.1.100&#x27;</span>,server=<span class=\"string\">&#x27;Web Server Info :&#x27;</span>))</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\nWeb Server Info :192.168.1.100:8888<br>\n+++</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&#123;0&#125;*&#123;1&#125;=&#123;2:0&gt;2&#125;&quot;</span>.<span class=\"built_in\">format</span>(<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>*<span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&#123;:*^30&#125;&quot;</span>.<span class=\"built_in\">format</span>(<span class=\"string\">&#x27;centered&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&#123;:.3f&#125;&quot;</span>.<span class=\"built_in\">format</span>(<span class=\"number\">3.14159</span>))</span><br></pre></td></tr></table></figure>\n<p>+++primary 结果为<br>\n3*2=06<br>\n<em><strong><strong><strong><strong><strong>centered</strong></strong></strong></strong></strong></em><br>\n3.142<br>\n+++</p>\n</blockquote>\n<h3 id=\"正则表达式\">正则表达式</h3>\n<blockquote>\n<h4 id=\"cmd的通配符\">cmd的通配符</h4>\n<p>文件名中可以用 * 和 ?</p>\n<ul>\n<li>&quot; * &quot; 可与任意一串字符匹配</li>\n<li>&quot; ? &quot; 可与任何一个实际字符匹配</li>\n</ul>\n</blockquote>\n<h4 id=\"正则表达式-2\">正则表达式</h4>\n<ul>\n<li>是一种用来匹配字符串的武器，是用来简洁表达一组字符串的表达式。</li>\n</ul>\n<p>:::info</p>\n<h5 id=\"行定位符\">行定位符</h5>\n<p>:::</p>\n<blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">^[<span class=\"number\">0</span>-<span class=\"number\">9</span>]+abc$</span><br></pre></td></tr></table></figure>\n<p>^表示匹配输入字符串的开始位置。<br>\n$表示匹配输入字符串的结束位置，这里意思是匹配以abc结尾的字符串。<br>\n+表示匹配一个或多个对象，这里的对象是[0-9]，即匹配一个或多个“单个数字”。</p>\n</blockquote>\n<p>:::info</p>\n<h5 id=\"元字符\">元字符</h5>\n<p>:::</p>\n<table>\n<thead>\n<tr>\n<th>元字符</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>.</td>\n<td>匹配除换行符以外的任意字符</td>\n</tr>\n<tr>\n<td>\\w</td>\n<td>匹配汉字字母数字下划线</td>\n</tr>\n<tr>\n<td>\\W</td>\n<td>匹配\\w以外的字符</td>\n</tr>\n<tr>\n<td>\\s</td>\n<td>匹配任意空白符</td>\n</tr>\n<tr>\n<td>\\b</td>\n<td>匹配单词的开始或者结束</td>\n</tr>\n<tr>\n<td>\\d</td>\n<td>匹配数字</td>\n</tr>\n</tbody>\n</table>\n<p>:::info</p>\n<h5 id=\"限定字符\">限定字符</h5>\n<p>:::</p>\n<table>\n<thead>\n<tr>\n<th>限定字符</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>?</td>\n<td>匹配零或一次对象</td>\n</tr>\n<tr>\n<td>+</td>\n<td>匹配一或多次对象</td>\n</tr>\n<tr>\n<td>*</td>\n<td>匹配零或多次对象</td>\n</tr>\n<tr>\n<td>‘{n}’</td>\n<td>匹配 n 次对象</td>\n</tr>\n<tr>\n<td>‘{n,}’</td>\n<td>匹配至少 n 次对象</td>\n</tr>\n<tr>\n<td>‘{n,m}’</td>\n<td>匹配 n 到 m 次对象</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>备注：匹配特殊字符类似’-‘时，要用’'转义，比如匹配010-12345则是\\d{3}-\\d{3,8}</li>\n</ul>\n<p>:::info</p>\n<h5 id=\"字符类\">字符类</h5>\n<p>:::</p>\n<blockquote>\n<p>若要做更精确的匹配，可用[]表示范围</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">[a-zA-Z\\_][<span class=\"number\">0</span>-9a-zA-Z\\_]*</span><br></pre></td></tr></table></figure>\n<p>该式子可以匹配由字母或下划线开头，后接任意个由一个数字、字母或者下划线组成的字符串，也就是Python合法的变量；</p>\n</blockquote>\n<p>:::info</p>\n<h5 id=\"排除字符\">排除字符</h5>\n<p>:::</p>\n<blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">[^a-zA-Z]</span><br></pre></td></tr></table></figure>\n<p>该式子表示匹配一个不是字母的字符</p>\n</blockquote>\n<p>:::info</p>\n<h5 id=\"选择字符\">选择字符</h5>\n<p>:::</p>\n<blockquote>\n<p>用’|'表示或者，比如身份证号码长度为15位数字或者18位，其中第十八个可能为数字或者X<br>\n则匹配身份证的表达式为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">(^\\d&#123;<span class=\"number\">15</span>&#125;$)|(^\\d&#123;<span class=\"number\">18</span>&#125;$)|(^\\d&#123;<span class=\"number\">17</span>&#125;)(\\d|X|x)$</span><br></pre></td></tr></table></figure>\n<ul>\n<li>注意，这里的 ^ 表示匹配输入字符串的开始位置，放在[]里面才表示排除字符。</li>\n</ul>\n</blockquote>\n<p>:::info</p>\n<h5 id=\"转义字符\">转义字符</h5>\n<p>:::</p>\n<blockquote>\n<p>转义字符()可以将特殊字符变为普通的字符<br>\n比如 . 表示匹配一个任意字符，.就可以匹配IP地址了。</p>\n</blockquote>\n<p>:::info</p>\n<h5 id=\"分组\">分组</h5>\n<p>:::</p>\n<blockquote>\n<p>小括号的作用有两个：</p>\n<ul>\n<li>改变限定字符的作用范围，比如(a|b)c和a|bc的区别，一个是匹配ac或bc，一个是匹配a或bc。</li>\n<li>分组，也就是子表达式，比如(.[0-9]{1,3}){3}表示对分组(.[0-9]{1,3})进行重复操作。</li>\n</ul>\n</blockquote>\n<p>:::info</p>\n<h5 id=\"Python中正则表达式的语法\">Python中正则表达式的语法</h5>\n<p>:::</p>\n<blockquote>\n<p>在python中使用正则表达式的时候，是将其作为模式字符串使用的，意思就是，匹配一个字母的正则表达式是[a-zA-Z]，但在python里面要写成字符串形式，即写成’[a-zA-Z]’<br>\n匹配字母m开头的单词的正则表达式是\\bm\\w*\\b,但是不能写成’\\bm\\w*\\b’，因为\\需要转义，可以写成以下两个形式：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\"><span class=\"string\">&#x27;\\\\bm\\\\w*\\\\b&#x27;</span></span><br><span class=\"line\"><span class=\"string\">r&#x27;\\bm\\w*\\b&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>注意区分以下正则表达式：</p>\n<ul>\n<li>(\\s*) 表示匹配任意个空白符</li>\n<li>[\\s*] 表示匹配空白符或者*</li>\n</ul>\n</blockquote>\n<h3 id=\"使用re模块实现正则表达式操作\">使用re模块实现正则表达式操作</h3>\n<p><s>（大概不考吧大概不考吧）</s></p>\n",
            "tags": [
                "笔记~",
                "Python~"
            ]
        },
        {
            "id": "https://astolfocat.github.io/MyCategories/note/Python/rename/",
            "url": "https://astolfocat.github.io/MyCategories/note/Python/rename/",
            "title": "文件批量重命名",
            "date_published": "2021-11-01T16:00:00.000Z",
            "content_html": "<h2 id=\"批量重命名\">批量重命名</h2>\n<p>下面是在整理阿福的图片的时候，因为强迫症想要给图片同一名字，但是手动重命名过于麻烦，现在既然学了Python那么也是该让它发挥价值了（yeah~）</p>\n<ul>\n<li>因为比较简单所以就不做批注了叭</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># coding = gbk</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\">path = <span class=\"string\">&#x27;F:\\\\Pictures\\\\photogallery\\\\Astolfo\\\\&#x27;</span></span><br><span class=\"line\">file_names = os.listdir(path)</span><br><span class=\"line\">n = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> file_names:</span><br><span class=\"line\">    oldname = path+file_names[n]</span><br><span class=\"line\">    newname = path+<span class=\"string\">&#x27;Astolfo_&#x27;</span>+<span class=\"built_in\">str</span>(n+<span class=\"number\">1</span>).zfill(<span class=\"number\">3</span>)+<span class=\"string\">&#x27;.jpg&#x27;</span></span><br><span class=\"line\">    os.rename(oldname, newname)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(oldname,<span class=\"string\">&#x27;---&gt;&#x27;</span>,newname)</span><br><span class=\"line\">    n+=<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>",
            "tags": [
                "笔记~",
                "Python~"
            ]
        }
    ]
}